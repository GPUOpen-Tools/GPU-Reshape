<!--

  The MIT License (MIT)
  
  Copyright (c) 2023 Miguel Petersen
  Copyright (c) 2023 Advanced Micro Devices, Inc
  Copyright (c) 2023 Avalanche Studios Group
  
  Permission is hereby granted, free of charge, to any person obtaining a copy 
  of this software and associated documentation files (the "Software"), to deal 
  in the Software without restriction, including without limitation the rights 
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
  of the Software, and to permit persons to whom the Software is furnished to do so, 
  subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in all 
  copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
  FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  
-->

<Window x:Class="Studio.Views.LaunchWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:cvm="clr-namespace:Studio.ViewModels.Controls;assembly=UIX.Studio.Runtime"
        xmlns:controls="clr-namespace:Studio.Views.Controls"
        xmlns:propertyGrid="https://github.com/avalonia_extendedtoolkit"
        xmlns:viewModels="clr-namespace:Studio.ViewModels"
        xmlns:valueConverters="clr-namespace:Studio.ValueConverters"
        xmlns:r="clr-namespace:Studio.Resources"
        mc:Ignorable="d"
        d:DesignWidth="550" d:DesignHeight="550"
        Width="550" Height="550"
        UseLayoutRounding="True" RenderOptions.BitmapInterpolationMode="HighQuality"
        WindowState="Normal" WindowStartupLocation="CenterScreen"
        TransparencyLevelHint="None"
        Foreground="{DynamicResource DockThemeForegroundBrush}"
        BorderThickness="1" BorderBrush="{DynamicResource DockThemeBorderLowBrush}"
        FontFamily="Segoe UI, SF Pro Display, Noto Sans, Cantarel"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        x:DataType="viewModels:LaunchViewModel">
    <Window.Resources>
        <ResourceDictionary>
            <valueConverters:ConnectionStatusToProgressConverter x:Key="ConnectionStatusToProgressConverter" />
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid Margin="5">
        <!-- Tool Header -->
        <StackPanel VerticalAlignment="Top" Orientation="Horizontal">
            <Image Source="/Resources/Icons/Icon_NoFrame.png" Width="17" />

            <TextBlock Margin="7,0,0,0">Launch process</TextBlock>
        </StackPanel>

        <!-- Content -->
        <Grid Margin="5,30,5,30" VerticalAlignment="Stretch">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Application" />

                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding ApplicationPath}" />

                    <Button
                        x:Name="ApplicationButton"
                        Background="Transparent"
                        BorderThickness="0"
                        HorizontalAlignment="Right"
                        Width="25"
                        Height="25"
                        Margin="0 0 0 0">
                        <PathIcon ToolTip.Tip="{x:Static r:Resources.Launch_SelectFolder_Tooltip}" Data="{StaticResource Folder}" Margin="0 2 1 0" Width="15" />
                    </Button>
                </Grid>

                <TextBlock Text="Working directory" Margin="0 15 0 0" />
                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding WorkingDirectoryPath}" />

                    <Button
                        x:Name="WorkingDirectoryButton"
                        Background="Transparent"
                        BorderThickness="0"
                        HorizontalAlignment="Right"
                        Width="25"
                        Height="25"
                        Margin="0 0 0 0">
                        <PathIcon ToolTip.Tip="{x:Static r:Resources.Launch_SelectFolder_Tooltip}" Data="{StaticResource Folder}" Margin="0 2 1 0" Width="15" />
                    </Button>
                </Grid>

                <TextBlock Text="Arguments" Margin="0 15 0 0" />
                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding Arguments}" />
                </Grid>
                
                <TextBlock Text="Workspace" Margin="0 15 0 0" />
            </StackPanel>

            <Grid ColumnDefinitions="*,*" Margin="0 210 0 5">
                <TreeView
                    Grid.Column="0"
                    x:Name="WorkspaceTree"
                    Margin="0 0 2.5 0"
                    ContextMenu="{StaticResource ReactiveContextMenu}"
                    Tag="{Binding}"
                    Items="{Binding Workspaces}">
                    <TreeView.Styles>
                        <Style Selector="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding Path=(cvm:IObservableTreeItem).IsExpanded}" />
                        </Style>
                    </TreeView.Styles>
                    <TreeView.ItemTemplate>
                        <TreeDataTemplate ItemsSource="{Binding Items}">
                            <controls:UniformViewHost ContextMenu="{StaticResource ReactiveContextMenu}" DataContext="{Binding $self.DataContext}" />
                        </TreeDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <Border Grid.Column="1" Margin="2.5 0 0  0" Background="{StaticResource DockApplicationAccentBrushLow}" Padding="5">
                    <propertyGrid:PropertyGrid
                        x:Name="PropertyGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        PropertyDisplayMode="All"
                        ShowAttachedProperties="True"
                        ShowReadOnlyProperties="True">
                        <propertyGrid:PropertyGrid.Layout>
                            <propertyGrid:CategorizedLayout />
                        </propertyGrid:PropertyGrid.Layout>
                    </propertyGrid:PropertyGrid>
                </Border>
            </Grid>
            
            <ProgressBar
                VerticalAlignment="Bottom"
                MinHeight="5"
                x:Name="ProgressIndicator"
                Value="100"
                IsIndeterminate="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}"
                Foreground="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}" />
        </Grid>

        <!-- Tool Result -->
        <Grid VerticalAlignment="Bottom">
            <TextBlock
                x:Name="StatusBlock"
                Margin="5,0,0,0"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Text="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}" />

            <StackPanel Margin="0,0,5,0" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button
                    HorizontalAlignment="Right"
                    IsEnabled="{Binding CanLaunch}"
                    Command="{Binding Start}">
                    Start Process
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>