<!--

  The MIT License (MIT)
  
  Copyright (c) 2024 Advanced Micro Devices, Inc.,
  Fatalist Development AB (Avalanche Studio Group),
  and Miguel Petersen.
  
  All Rights Reserved.
  
  Permission is hereby granted, free of charge, to any person obtaining a copy 
  of this software and associated documentation files (the "Software"), to deal 
  in the Software without restriction, including without limitation the rights 
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
  of the Software, and to permit persons to whom the Software is furnished to do so, 
  subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in all 
  copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
  FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  
-->


<Window x:Class="Studio.Views.LaunchWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:cvm="clr-namespace:Studio.ViewModels.Controls;assembly=UIX.Studio.Runtime"
        xmlns:controls="clr-namespace:Studio.Views.Controls"
        xmlns:propertyGrid="https://github.com/avalonia_extendedtoolkit"
        xmlns:viewModels="clr-namespace:Studio.ViewModels"
        xmlns:valueConverters="clr-namespace:Studio.ValueConverters"
        xmlns:r="clr-namespace:Studio.Resources"
        xmlns:workspace="clr-namespace:Studio.ViewModels.Workspace;assembly=UIX.Studio.Runtime"
        mc:Ignorable="d"
        CanResize="False"
        Width="550"
        SizeToContent="Height"
        d:DesignWidth="550" d:DesignHeight="550"
        UseLayoutRounding="True" RenderOptions.BitmapInterpolationMode="HighQuality"
        WindowState="Normal" WindowStartupLocation="CenterScreen"
        TransparencyLevelHint="None"
        Foreground="{DynamicResource DockThemeForegroundBrush}"
        BorderThickness="1" BorderBrush="{DynamicResource DockThemeBorderLowBrush}"
        FontFamily="Segoe UI, SF Pro Display, Noto Sans, Cantarel"
        Icon="/Resources/Icons/Icon_Frame.ico"
        Title="Launch Application"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        x:DataType="viewModels:LaunchViewModel">
    <Window.Resources>
        <ResourceDictionary>
            <valueConverters:ConnectionStatusToProgressConverter x:Key="ConnectionStatusToProgressConverter" />
            <valueConverters:ConfigurationVisibilityConverter x:Key="ConfigurationVisibilityConverter" />
            <valueConverters:WorkspaceConfigurationFlagVisibilityConverter x:Key="WorkspaceConfigurationFlagVisibilityConverter" />
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <!-- Tool Header -->
        <controls:WindowChrome Title="Launch Application" Separator="True"/>

        <!-- Content -->
        <Grid Margin="10,45,5,35" VerticalAlignment="Stretch">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Application" />

                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding ApplicationPath}" Padding="4 4 22 4"/>

                    <Button
                        x:Name="ApplicationButton"
                        Classes="Icon"
                        HorizontalAlignment="Right"
                        Width="25"
                        Height="25"
                        Margin="0 0 0 0">
                        <PathIcon ToolTip.Tip="{x:Static r:Resources.Launch_SelectFolder_Tooltip}" Data="{StaticResource Folder}" Margin="0 2 1 0" Width="15" />
                    </Button>
                </Grid>

                <TextBlock Text="Working directory" Margin="0 15 0 0" />
                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding WorkingDirectoryPath}" Padding="4 4 22 4"/>

                    <Button
                        x:Name="WorkingDirectoryButton"
                        Classes="Icon"
                        HorizontalAlignment="Right"
                        Width="25"
                        Height="25"
                        Margin="0 0 0 0">
                        <PathIcon ToolTip.Tip="{x:Static r:Resources.Launch_SelectFolder_Tooltip}" Data="{StaticResource Folder}" Margin="0 2 1 0" Width="15" />
                    </Button>
                </Grid>

                <TextBlock Text="Arguments" Margin="0 15 0 0" />
                <Grid Margin="0 5 0 0">
                    <TextBox Text="{Binding Arguments}" />
                </Grid>
                
                <controls:InlineSectionView Title="Additional Arguments" IsExpanded="True" Margin="0 10 0 0" >
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox
                                IsChecked="{Binding CaptureChildProcesses}"
                                Content="Capture Child Processes"
                                ToolTip.Tip="{x:Static r:Resources.Launch_SafeGuard}"/>
                            
                            <CheckBox
                                Margin="15 0 0 0"
                                IsChecked="{Binding AttachAllDevices}"
                                Content="Attach All Devices"
                                ToolTip.Tip="{x:Static r:Resources.Launch_SafeGuard}"/>
                        </StackPanel>
                        
                        <TextBlock Text="Environment"  Margin="0 15 0 0" />
                        <Grid Margin="0 5 0 0">
                            <TextBox Text="{Binding Environment}" />
                        </Grid>
                    </StackPanel>
                </controls:InlineSectionView>
                
                <TextBlock Text="Workspace" Margin="0 10 0 0" />
                <Grid Margin="0 5 0 0">
                    <ComboBox 
                        Height="25"
                        Margin="0 0 0 5"
                        SelectedItem="{Binding SelectedConfiguration}"
                        Items="{Binding Configurations}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type workspace:IWorkspaceConfigurationViewModel}">
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
                
                <Grid>
                    <Border
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource InfoMediumBackground}"
                        IsVisible="{Binding SelectedConfiguration, Converter={StaticResource ConfigurationVisibilityConverter}, ConverterParameter=true}"
                        Padding="5 5 5 5"
                        Margin="0 0 0 5">
                        <StackPanel>
                            <TextBlock
                                Text="{Binding SelectedConfigurationDescription}"
                                TextWrapping="Wrap"/>
                        
                            <CheckBox
                                IsChecked="{Binding SafeGuard}"
                                IsVisible="{Binding SelectedConfiguration.Flags, Converter={StaticResource WorkspaceConfigurationFlagVisibilityConverter}, ConverterParameter={x:Static workspace:WorkspaceConfigurationFlag.CanSafeGuard}}"
                                Margin="0 10 0 0"
                                ToolTip.Tip="{x:Static r:Resources.Launch_SafeGuard}"
                                Content="Safe guarding">
                            </CheckBox>
                        
                            <CheckBox
                                IsChecked="{Binding Detail}"
                                IsVisible="{Binding SelectedConfiguration.Flags, Converter={StaticResource WorkspaceConfigurationFlagVisibilityConverter}, ConverterParameter={x:Static workspace:WorkspaceConfigurationFlag.CanDetail}}"
                                Margin="0 10 0 0"
                                ToolTip.Tip="{x:Static r:Resources.Launch_Detail}"
                                Content="Detailed reporting">
                            </CheckBox>
                        
                            <CheckBox
                                IsChecked="{Binding SynchronousRecording}"
                                IsEnabled="{Binding SelectedConfiguration.Flags, Converter={StaticResource WorkspaceConfigurationFlagVisibilityConverter}, ConverterParameter={x:Static workspace:WorkspaceConfigurationFlagBindings.RequiresSynchronousRecordingBinding}}"
                                Margin="0 10 0 0"
                                ToolTip.Tip="{x:Static r:Resources.Launch_SynchronousRecording}"
                                Content="Synchronous recording">
                            </CheckBox>
                        </StackPanel>
                    </Border>

                    <Grid 
                        ColumnDefinitions="*,*" 
                        Margin="0 0 0 5"
                        IsVisible="{Binding SelectedConfiguration, Converter={StaticResource ConfigurationVisibilityConverter}}"
                        Height="200">
                        <TreeView
                            Grid.Column="0"
                            x:Name="WorkspaceTree"
                            Margin="0 0 2.5 0"
                            ContextMenu="{StaticResource ReactiveContextMenu}"
                            Tag="{Binding}"
                            Items="{Binding Workspaces}">
                            <TreeView.Styles>
                                <Style Selector="TreeViewItem">
                                    <Setter Property="IsExpanded" Value="{Binding Path=(cvm:IObservableTreeItem).IsExpanded}" />
                                </Style>
                            </TreeView.Styles>
                            <TreeView.ItemTemplate>
                                <TreeDataTemplate ItemsSource="{Binding Items}">
                                    <controls:UniformViewHost ContextMenu="{StaticResource ReactiveContextMenu}" DataContext="{Binding $self.DataContext}" />
                                </TreeDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>

                        <Border Grid.Column="1" Margin="2.5 0 0  0" Background="{StaticResource DockApplicationAccentBrushLow}" Padding="5">
                            <propertyGrid:PropertyGrid
                                x:Name="PropertyGrid"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                PropertyDisplayMode="All"
                                ShowAttachedProperties="True"
                                ShowReadOnlyProperties="True">
                                <propertyGrid:PropertyGrid.Layout>
                                    <propertyGrid:CategorizedLayout />
                                </propertyGrid:PropertyGrid.Layout>
                            </propertyGrid:PropertyGrid>
                        </Border>
                    </Grid>
                    
                    <ProgressBar
                        VerticalAlignment="Bottom"
                        MinHeight="5"
                        x:Name="ProgressIndicator"
                        Value="100"
                        Background="{DynamicResource InfoMediumBackground}"
                        IsIndeterminate="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}"
                        Foreground="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}" />
                </Grid>
            </StackPanel>
        </Grid>

        <!-- Tool Result -->
        <Grid VerticalAlignment="Bottom" Margin="5">
            <TextBlock
                x:Name="StatusBlock"
                Margin="5,0,0,0"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Text="{Binding ConnectionStatus, Converter={StaticResource ConnectionStatusToProgressConverter}}" />

            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Button
                    Classes="Primary"
                    HorizontalAlignment="Right"
                    IsEnabled="{Binding CanLaunch}"
                    Command="{Binding Start}">
                    Start Process
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>